"use strict";(self.webpackChunk_hyperse_hps_website=self.webpackChunk_hyperse_hps_website||[]).push([[103],{2301:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>p,default:()=>l,frontMatter:()=>i,metadata:()=>r,toc:()=>a});const r=JSON.parse('{"id":"typescript","title":"TypeScript","description":"This package is written in TypeScript. So you don\'t need to create your own types. Here an example if you use TypeScript.","source":"@site/docs/typescript.md","sourceDirName":".","slug":"/typescript","permalink":"/hps/docs/typescript","draft":false,"unlisted":false,"editUrl":"https://github.com/hyperse-io/hps/docs/typescript.md","tags":[],"version":"current","sidebarPosition":4,"frontMatter":{"sidebar_position":4},"sidebar":"tutorialSidebar","previous":{"title":"TextField inheritance","permalink":"/hps/docs/inheritance"},"next":{"title":"CSS","permalink":"/hps/docs/css"}}');var o=n(2540),s=n(3023);const i={sidebar_position:4},p="TypeScript",c={},a=[];function u(e){const t={code:"code",h1:"h1",header:"header",p:"p",pre:"pre",strong:"strong",...(0,s.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(t.header,{children:(0,o.jsx)(t.h1,{id:"typescript",children:"TypeScript"})}),"\n",(0,o.jsxs)(t.p,{children:["This package is written in ",(0,o.jsx)(t.strong,{children:"TypeScript"}),". So you don't need to create your own types. Here an example if you use ",(0,o.jsx)(t.strong,{children:"TypeScript"}),"."]}),"\n",(0,o.jsxs)(t.p,{children:[(0,o.jsx)(t.strong,{children:"Nota bene"}),": Props are defined within the ",(0,o.jsx)(t.code,{children:"MuiColorInputProps"})," interface."]}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-tsx",children:"import React from 'react';\nimport {\n  MuiColorInput,\n  MuiColorInputValue,\n  MuiColorInputColors,\n  MuiColorInputFormat,\n} from 'mui-color-input';\n\nconst MyComponent = () => {\n  const [value, setValue] = React.useState<MuiColorInputValue>('#ffffff');\n\n  const handleChange = (newValue: string, colors: MuiColorInputColors) => {\n    setValue(newValue);\n  };\n\n  const format: MuiColorInputFormat = 'hex';\n\n  return (\n    <MuiColorInput value={value} onChange={handleChange} format={format} />\n  );\n};\n"})})]})}function l(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(u,{...e})}):u(e)}},3023:(e,t,n)=>{n.d(t,{R:()=>i,x:()=>p});var r=n(3696);const o={},s=r.createContext(o);function i(e){const t=r.useContext(s);return r.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function p(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:i(e.components),r.createElement(s.Provider,{value:t},e.children)}}}]);