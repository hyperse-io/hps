import casual from 'casual';
import type { IMocks } from '@graphql-tools/mock';
import type { IResolvers } from '@graphql-tools/utils';

export const defaultGraphqlMocks: IMocks<IResolvers> = {
  Int: () => casual.integer(1, 10000),
  Float: () => casual.double(1, 10000),
  String: () => casual.word,
  Boolean: () => casual.boolean,
  JSON: () => '{}',
  ID: () => casual.uuid,
  Money: () => casual.integer(1, 10000),
  DateTime: () => casual.date('YYYY-MM-DD HH:mm:ss'),
  Date: () => casual.date('YYYY-MM-DD'),
  Time: () => casual.time,
  Email: () => casual.email,
  URL: () => casual.url,
  Phone: () => casual.phone,
  Address: () => casual.address,
  Name: () => casual.name,
  Sentence: () => casual.sentence,
  Text: () => casual.text,
  Enum: () => casual.word,
  Null: () => null,
  Undefined: () => undefined,
  Void: () => null,
  Never: () => null,
  Any: () => casual.word,
  Unknown: () => casual.word,
  LanguageCode: () => casual.language_code,
  Locale: () => casual.locale,
  MimeType: () => casual.mime_type,
  FileExtension: () => casual.file_extension,
  UUID: () => casual.uuid,
  RGBHex: () => casual.rgb_hex,
  RGBArray: () => casual.rgb_array,
  ColorName: () => casual.color_name,
  SafeColorName: () => casual.safe_color_name,
  CountryCode: () => casual.country_code,
  Country: () => casual.country,
  City: () => casual.city,
  Zip: () => casual.zip,
  Street: () => casual.street,
  Address1: () => casual.address1,
  Address2: () => casual.address2,
  State: () => casual.state,
  StateAbbr: () => casual.state_abbr,
  Latitude: () => casual.latitude,
  Longitude: () => casual.longitude,
  BuildingNumber: () => casual.building_number,
  UnixTime: () => casual.unix_time,
  Moment: () => casual.moment,
  Century: () => casual.century,
  AMPM: () => casual.am_pm,
  DayOfYear: () => casual.day_of_year,
  DayOfMonth: () => casual.day_of_month,
  DayOfWeek: () => casual.day_of_week,
  MonthNumber: () => casual.month_number,
  MonthName: () => casual.month_name,
  Year: () => casual.year,
  Timezone: () => casual.timezone,
  CardType: () => casual.card_type,
  CardNumber: () => casual.card_number,
  CardExp: () => casual.card_exp,
  CardData: () => casual.card_data,
  CardHolderName: () => casual.card_data.holder_name,
};
